{
  "stats": {
    "suites": 4,
    "tests": 20,
    "passes": 20,
    "pending": 0,
    "failures": 0,
    "start": "2024-04-26T11:06:05.669Z",
    "end": "2024-04-26T11:06:06.758Z",
    "duration": 1089,
    "testsRegistered": 20,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "71699ee5-85e4-42a5-9623-18c339b9fae3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "555eecbe-0d19-464d-a582-bb85989e3b8b",
          "title": "DEX Request - DexTrade Tokens",
          "fullFile": "/Users/timothy.tonwuru/api_testing_framework/api_test/request_dextrade_tokens.js",
          "file": "/api_test/request_dextrade_tokens.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DEX Request - DexTrade Tokens\"",
              "fullTitle": "DEX Request - DexTrade Tokens \"before all\" hook in \"DEX Request - DexTrade Tokens\"",
              "timedOut": false,
              "duration": 386,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    res = await request({\n        url, \n        document, \n        requestHeaders\n    });\n} catch (error) {\n    console.error('Error massage: ', error);\n    process.exit(1);\n}",
              "err": {},
              "uuid": "488b01d1-2a80-47b6-87cf-6c725d61e67c",
              "parentUUID": "555eecbe-0d19-464d-a582-bb85989e3b8b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "To verify transaction status is true",
              "fullTitle": "DEX Request - DexTrade Tokens To verify transaction status is true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTradeByTokens[0];\nconst transaction_status = result.TransactionStatus.Success\n// console.log(result);\n\nassert.strictEqual(true, transaction_status, 'Error: status not the same');",
              "err": {},
              "uuid": "6dbacc04-fdf5-427d-b9fe-d59b803a753d",
              "parentUUID": "555eecbe-0d19-464d-a582-bb85989e3b8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify transaction status is not false",
              "fullTitle": "DEX Request - DexTrade Tokens To verify transaction status is not false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTradeByTokens[0];\nconst transaction_status = result.TransactionStatus.Success\n\nexpect(transaction_status).not.eq(false);",
              "err": {},
              "uuid": "aa437086-5ed6-4b6b-9090-cacb1bcaab6b",
              "parentUUID": "555eecbe-0d19-464d-a582-bb85989e3b8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify transaction properties Cost, Gas and GasPrice are present",
              "fullTitle": "DEX Request - DexTrade Tokens To verify transaction properties Cost, Gas and GasPrice are present",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTradeByTokens[0].Transaction;\n\nexpect(result).haveOwnProperty(cost);\nexpect(result).haveOwnProperty(gas);\nexpect(result).haveOwnProperty(gas_price);",
              "err": {},
              "uuid": "6b64c312-e6be-48d2-ba73-74df31733f89",
              "parentUUID": "555eecbe-0d19-464d-a582-bb85989e3b8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify {DEXTradeByTokens} object has properties Transaction and TransactionStatus",
              "fullTitle": "DEX Request - DexTrade Tokens To verify {DEXTradeByTokens} object has properties Transaction and TransactionStatus",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTradeByTokens[0];\n\nexpect(result).haveOwnProperty(trans);\nexpect(result).haveOwnProperty(trans_status);",
              "err": {},
              "uuid": "f4c49e8a-4341-4ad3-9ccd-df79111df1e8",
              "parentUUID": "555eecbe-0d19-464d-a582-bb85989e3b8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify {DEXTradeByTokens} object is an array of objects",
              "fullTitle": "DEX Request - DexTrade Tokens To verify {DEXTradeByTokens} object is an array of objects",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTradeByTokens;\n\nexpect(result).instanceOf(Array);",
              "err": {},
              "uuid": "c00eb919-7117-488f-8d11-13430ed48ffe",
              "parentUUID": "555eecbe-0d19-464d-a582-bb85989e3b8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify {EVM} is an instance of an object",
              "fullTitle": "DEX Request - DexTrade Tokens To verify {EVM} is an instance of an object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM;\n     \nexpect(result).instanceOf(Object);",
              "err": {},
              "uuid": "6aa3013b-39c9-434e-8cfc-28b5f20074f9",
              "parentUUID": "555eecbe-0d19-464d-a582-bb85989e3b8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify {EVM} is not an instance of an array",
              "fullTitle": "DEX Request - DexTrade Tokens To verify {EVM} is not an instance of an array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM;\n\nexpect(result).not.instanceOf(Array);",
              "err": {},
              "uuid": "460a8b3e-14dd-4161-bb35-0e59fbba64db",
              "parentUUID": "555eecbe-0d19-464d-a582-bb85989e3b8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify the transaction count is 10",
              "fullTitle": "DEX Request - DexTrade Tokens To verify the transaction count is 10",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTradeByTokens;\n\nexpect(result).length(len);",
              "err": {},
              "uuid": "514437a5-d4a8-43e6-90a1-8096796f5a3c",
              "parentUUID": "555eecbe-0d19-464d-a582-bb85989e3b8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify response object is not empty",
              "fullTitle": "DEX Request - DexTrade Tokens To verify response object is not empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTradeByTokens;\n\nexpect(result).not.empty",
              "err": {},
              "uuid": "032c6c2d-2968-4357-b099-ef5674fb2a98",
              "parentUUID": "555eecbe-0d19-464d-a582-bb85989e3b8b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6dbacc04-fdf5-427d-b9fe-d59b803a753d",
            "aa437086-5ed6-4b6b-9090-cacb1bcaab6b",
            "6b64c312-e6be-48d2-ba73-74df31733f89",
            "f4c49e8a-4341-4ad3-9ccd-df79111df1e8",
            "c00eb919-7117-488f-8d11-13430ed48ffe",
            "6aa3013b-39c9-434e-8cfc-28b5f20074f9",
            "460a8b3e-14dd-4161-bb35-0e59fbba64db",
            "514437a5-d4a8-43e6-90a1-8096796f5a3c",
            "032c6c2d-2968-4357-b099-ef5674fb2a98"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7c934397-3777-4bf6-90b7-b9132ebdf4e2",
          "title": "Dex Request - DexTrades",
          "fullFile": "/Users/timothy.tonwuru/api_testing_framework/api_test/request_dextrades.js",
          "file": "/api_test/request_dextrades.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Dex Request - DexTrades\"",
              "fullTitle": "Dex Request - DexTrades \"before all\" hook in \"Dex Request - DexTrades\"",
              "timedOut": false,
              "duration": 91,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    res = await request({\n        url, \n        document, \n        requestHeaders\n    });\n} catch (error) {\n    console.error('Error massage: ', error);\n    process.exit(1);\n}",
              "err": {},
              "uuid": "78203738-25b6-4fc1-ae06-c7e66b52fbf4",
              "parentUUID": "7c934397-3777-4bf6-90b7-b9132ebdf4e2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "To verify the value of fungigle parameter is true",
              "fullTitle": "Dex Request - DexTrades To verify the value of fungigle parameter is true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTrades[0].Trade.Buy;\nconst fungible_value = result.Currency.Fungible;\n    //   console.log(res.EVM.DEXTrades);\n    \nexpect(fungible_value).eq(true);",
              "err": {},
              "uuid": "5ec3d14c-39ed-406f-b468-1b0b1fa40c73",
              "parentUUID": "7c934397-3777-4bf6-90b7-b9132ebdf4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify the value of fungigle parameter is not false",
              "fullTitle": "Dex Request - DexTrades To verify the value of fungigle parameter is not false",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTrades[0].Trade.Buy;\nconst fungible_value = result.Currency.Fungible;\nexpect(fungible_value).not.eq(false);",
              "err": {},
              "uuid": "f9fcf27c-d56f-4d97-b9d1-0f2a9ed4877c",
              "parentUUID": "7c934397-3777-4bf6-90b7-b9132ebdf4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify the response payload has a Currency parameter",
              "fullTitle": "Dex Request - DexTrades To verify the response payload has a Currency parameter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTrades[0].Trade.Buy;\nexpect(result).haveOwnProperty(cur);",
              "err": {},
              "uuid": "c801876f-2dbe-4b6c-8e98-7c60a71fde30",
              "parentUUID": "7c934397-3777-4bf6-90b7-b9132ebdf4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify response object is not empty",
              "fullTitle": "Dex Request - DexTrades To verify response object is not empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTrades;\nexpect(result).not.empty",
              "err": {},
              "uuid": "9582929f-1794-4f9f-9234-cc2ec8691b1c",
              "parentUUID": "7c934397-3777-4bf6-90b7-b9132ebdf4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify the property type of {amount} is a string",
              "fullTitle": "Dex Request - DexTrades To verify the property type of {amount} is a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTrades[0].Trade.Buy;\nconst amount = result.Amount;\nexpect(amount).to.be.a('string');",
              "err": {},
              "uuid": "23f532ea-b88b-4cb9-9dce-056d6c9fd98c",
              "parentUUID": "7c934397-3777-4bf6-90b7-b9132ebdf4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify the property type of {amount} is not an integer",
              "fullTitle": "Dex Request - DexTrades To verify the property type of {amount} is not an integer",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTrades[0].Trade.Buy;\nconst amount = result.Amount;\nexpect(amount).to.not.be.an('integer');",
              "err": {},
              "uuid": "06cb6977-78c6-4841-bb84-c8bbce586cbf",
              "parentUUID": "7c934397-3777-4bf6-90b7-b9132ebdf4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify the property type of {fungible} is boolean",
              "fullTitle": "Dex Request - DexTrades To verify the property type of {fungible} is boolean",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTrades[0].Trade.Buy;\nconst fungible = result.Currency.Fungible;\nexpect(fungible).to.be.a('boolean');",
              "err": {},
              "uuid": "82e9c89a-59c3-41f0-a8c0-9d51757bd763",
              "parentUUID": "7c934397-3777-4bf6-90b7-b9132ebdf4e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ec3d14c-39ed-406f-b468-1b0b1fa40c73",
            "f9fcf27c-d56f-4d97-b9d1-0f2a9ed4877c",
            "c801876f-2dbe-4b6c-8e98-7c60a71fde30",
            "9582929f-1794-4f9f-9234-cc2ec8691b1c",
            "23f532ea-b88b-4cb9-9dce-056d6c9fd98c",
            "06cb6977-78c6-4841-bb84-c8bbce586cbf",
            "82e9c89a-59c3-41f0-a8c0-9d51757bd763"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d48d4bd1-68aa-4829-a06e-2bb9064b8561",
          "title": "DEX Request - MinerRewards: Error Handling",
          "fullFile": "/Users/timothy.tonwuru/api_testing_framework/api_test/request_miner_rewards.js",
          "file": "/api_test/request_miner_rewards.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "To verify error message due to invalid parameter: BurntFee",
              "fullTitle": "DEX Request - MinerRewards: Error Handling To verify error message due to invalid parameter: BurntFee",
              "timedOut": false,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n            res = await request({\n                url, \n                document, \n                requestHeaders\n            });\n        } catch (error) {\n            const error_msg = error.response;\n            const status_value = error_msg.status\n            const invalid_parameter = error_msg.errors[0].message;\n            \n            assert.equal(200, status_value);\n            expect(invalid_parameter).contain(`Cannot query field \"${burnt_fee}\"`);\n            expect(invalid_parameter).contain('Cannot query field \"BurntFee\" on type \"EVM_MinerReward_Fields_Reward\". Did you mean \"BurntFees\"?')\n        }",
              "err": {},
              "uuid": "ceae3fd7-e366-4551-8202-cf5d9cf7a297",
              "parentUUID": "d48d4bd1-68aa-4829-a06e-2bb9064b8561",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ceae3fd7-e366-4551-8202-cf5d9cf7a297"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 92,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dd1edf8a-11b3-4311-a5c5-45f11fd0ccd1",
          "title": "DEX Request - Transfers",
          "fullFile": "/Users/timothy.tonwuru/api_testing_framework/api_test/request_transfers.js",
          "file": "/api_test/request_transfers.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DEX Request - Transfers\"",
              "fullTitle": "DEX Request - Transfers \"before all\" hook in \"DEX Request - Transfers\"",
              "timedOut": false,
              "duration": 501,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    res = await request({\n        url, \n        document, \n        requestHeaders\n    });\n} catch (error) {\n    console.error('Error massage: ', error);\n    process.exit(1);\n}",
              "err": {},
              "uuid": "66330509-4f75-4154-b500-230ae722c698",
              "parentUUID": "dd1edf8a-11b3-4311-a5c5-45f11fd0ccd1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "To verify transaction status is {true}",
              "fullTitle": "DEX Request - Transfers To verify transaction status is {true}",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.Transfers[0];\nconst transactionStatus = result.TransactionStatus.Success;\n\nassert.strictEqual(true, transactionStatus, 'Error: TransactionStatus is not the same');",
              "err": {},
              "uuid": "c2bef979-16c7-486f-8016-d85aa995a59e",
              "parentUUID": "dd1edf8a-11b3-4311-a5c5-45f11fd0ccd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify protocol name is erc20",
              "fullTitle": "DEX Request - Transfers To verify protocol name is erc20",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.Transfers[0];\n// console.log(result);\nconst protocolName = result.Transfer.Currency.ProtocolName\n\nassert.equal(proto_name, protocolName, 'Error: Protocol Name not same');",
              "err": {},
              "uuid": "53162182-a96f-4f81-ba51-8332ed893a3b",
              "parentUUID": "dd1edf8a-11b3-4311-a5c5-45f11fd0ccd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify {from} and {sender} address are the same",
              "fullTitle": "DEX Request - Transfers To verify {from} and {sender} address are the same",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.Transfers[0];\nconst transFrom = result.Transaction.From;\nconst sender = result.Transfer.Sender;\n\nexpect(transFrom).eq(sender);",
              "err": {},
              "uuid": "d5bcc3ec-8b95-47fe-a37e-1fd6b6db9909",
              "parentUUID": "dd1edf8a-11b3-4311-a5c5-45f11fd0ccd1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2bef979-16c7-486f-8016-d85aa995a59e",
            "53162182-a96f-4f81-ba51-8332ed893a3b",
            "d5bcc3ec-8b95-47fe-a37e-1fd6b6db9909"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "[object Object]": true
      },
      "version": "6.2.0"
    }
  }
}