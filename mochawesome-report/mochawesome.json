{
  "stats": {
    "suites": 4,
    "tests": 20,
    "passes": 20,
    "pending": 0,
    "failures": 0,
    "start": "2024-04-26T11:46:15.945Z",
    "end": "2024-04-26T11:46:16.728Z",
    "duration": 783,
    "testsRegistered": 20,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "aec0a9e3-ad1d-4d7e-bc8c-962d58aa44bc",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "afd44f2f-7fb6-42fc-90ac-7165537e5b23",
          "title": "DEX Request - DexTrade Tokens",
          "fullFile": "/Users/timothy.tonwuru/api_testing_framework/api_test/request_dextrade_tokens.js",
          "file": "/api_test/request_dextrade_tokens.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DEX Request - DexTrade Tokens\"",
              "fullTitle": "DEX Request - DexTrade Tokens \"before all\" hook in \"DEX Request - DexTrade Tokens\"",
              "timedOut": false,
              "duration": 424,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    res = await request({\n        url, \n        document, \n        requestHeaders\n    });\n} catch (error) {\n    console.error('Error massage: ', error);\n    process.exit(1);\n}",
              "err": {},
              "uuid": "168a582e-37ae-4d48-b3ef-d6a3ba299936",
              "parentUUID": "afd44f2f-7fb6-42fc-90ac-7165537e5b23",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "To verify transaction status is true",
              "fullTitle": "DEX Request - DexTrade Tokens To verify transaction status is true",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTradeByTokens[0];\nconst transaction_status = result.TransactionStatus.Success\n// console.log(result);\n\nassert.strictEqual(true, transaction_status, 'Error: status not the same');",
              "err": {},
              "uuid": "8d38667d-c84b-4871-a549-6c310efb14fa",
              "parentUUID": "afd44f2f-7fb6-42fc-90ac-7165537e5b23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify transaction status is not false",
              "fullTitle": "DEX Request - DexTrade Tokens To verify transaction status is not false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTradeByTokens[0];\nconst transaction_status = result.TransactionStatus.Success\n\nexpect(transaction_status).not.eq(false);",
              "err": {},
              "uuid": "83a9d56a-cf51-46bb-8d25-c7307e4c84fc",
              "parentUUID": "afd44f2f-7fb6-42fc-90ac-7165537e5b23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify transaction properties Cost, Gas and GasPrice are present",
              "fullTitle": "DEX Request - DexTrade Tokens To verify transaction properties Cost, Gas and GasPrice are present",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTradeByTokens[0].Transaction;\n\nexpect(result).haveOwnProperty(cost);\nexpect(result).haveOwnProperty(gas);\nexpect(result).haveOwnProperty(gas_price);",
              "err": {},
              "uuid": "bb0aca65-0ad9-4739-b5c3-7cdee103dd16",
              "parentUUID": "afd44f2f-7fb6-42fc-90ac-7165537e5b23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify {DEXTradeByTokens} object has properties Transaction and TransactionStatus",
              "fullTitle": "DEX Request - DexTrade Tokens To verify {DEXTradeByTokens} object has properties Transaction and TransactionStatus",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTradeByTokens[0];\n\nexpect(result).haveOwnProperty(trans);\nexpect(result).haveOwnProperty(trans_status);",
              "err": {},
              "uuid": "94dc5709-a4ab-49ce-acd4-3acbb618dcd1",
              "parentUUID": "afd44f2f-7fb6-42fc-90ac-7165537e5b23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify {DEXTradeByTokens} object is an array of objects",
              "fullTitle": "DEX Request - DexTrade Tokens To verify {DEXTradeByTokens} object is an array of objects",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTradeByTokens;\n\nexpect(result).instanceOf(Array);",
              "err": {},
              "uuid": "1cdae0ef-19d0-4ee2-b796-b2858b0f8b51",
              "parentUUID": "afd44f2f-7fb6-42fc-90ac-7165537e5b23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify {EVM} is an instance of an object",
              "fullTitle": "DEX Request - DexTrade Tokens To verify {EVM} is an instance of an object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM;\n     \nexpect(result).instanceOf(Object);",
              "err": {},
              "uuid": "df8f239c-bdca-46e5-b88f-50299cc417d4",
              "parentUUID": "afd44f2f-7fb6-42fc-90ac-7165537e5b23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify {EVM} is not an instance of an array",
              "fullTitle": "DEX Request - DexTrade Tokens To verify {EVM} is not an instance of an array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM;\n\nexpect(result).not.instanceOf(Array);",
              "err": {},
              "uuid": "65b31df0-ff5b-4e09-a15a-0135a112197d",
              "parentUUID": "afd44f2f-7fb6-42fc-90ac-7165537e5b23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify the transaction count is 10",
              "fullTitle": "DEX Request - DexTrade Tokens To verify the transaction count is 10",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTradeByTokens;\n\nexpect(result).length(len);",
              "err": {},
              "uuid": "772ff17b-1f14-4aa2-84e8-1b8e5a1ae98d",
              "parentUUID": "afd44f2f-7fb6-42fc-90ac-7165537e5b23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify response object is not empty",
              "fullTitle": "DEX Request - DexTrade Tokens To verify response object is not empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTradeByTokens;\n\nexpect(result).not.empty",
              "err": {},
              "uuid": "f0bb6e67-d4ba-4403-b870-dc27e953ecf4",
              "parentUUID": "afd44f2f-7fb6-42fc-90ac-7165537e5b23",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8d38667d-c84b-4871-a549-6c310efb14fa",
            "83a9d56a-cf51-46bb-8d25-c7307e4c84fc",
            "bb0aca65-0ad9-4739-b5c3-7cdee103dd16",
            "94dc5709-a4ab-49ce-acd4-3acbb618dcd1",
            "1cdae0ef-19d0-4ee2-b796-b2858b0f8b51",
            "df8f239c-bdca-46e5-b88f-50299cc417d4",
            "65b31df0-ff5b-4e09-a15a-0135a112197d",
            "772ff17b-1f14-4aa2-84e8-1b8e5a1ae98d",
            "f0bb6e67-d4ba-4403-b870-dc27e953ecf4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2432753f-972b-443a-8f30-3f9f9d835865",
          "title": "Dex Request - DexTrades",
          "fullFile": "/Users/timothy.tonwuru/api_testing_framework/api_test/request_dextrades.js",
          "file": "/api_test/request_dextrades.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Dex Request - DexTrades\"",
              "fullTitle": "Dex Request - DexTrades \"before all\" hook in \"Dex Request - DexTrades\"",
              "timedOut": false,
              "duration": 96,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    res = await request({\n        url, \n        document, \n        requestHeaders\n    });\n} catch (error) {\n    console.error('Error massage: ', error);\n    process.exit(1);\n}",
              "err": {},
              "uuid": "7c5fa134-adb4-484b-aa39-5293654185fd",
              "parentUUID": "2432753f-972b-443a-8f30-3f9f9d835865",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "To verify the value of fungigle parameter is true",
              "fullTitle": "Dex Request - DexTrades To verify the value of fungigle parameter is true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTrades[0].Trade.Buy;\nconst fungible_value = result.Currency.Fungible;\n    //   console.log(res.EVM.DEXTrades);\n    \nexpect(fungible_value).eq(true);",
              "err": {},
              "uuid": "1d818abc-0c06-47e3-ae20-5b992ece6d65",
              "parentUUID": "2432753f-972b-443a-8f30-3f9f9d835865",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify the value of fungigle parameter is not false",
              "fullTitle": "Dex Request - DexTrades To verify the value of fungigle parameter is not false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTrades[0].Trade.Buy;\nconst fungible_value = result.Currency.Fungible;\nexpect(fungible_value).not.eq(false);",
              "err": {},
              "uuid": "385f40d2-6d86-42b3-bdc5-39c90e5e9f1d",
              "parentUUID": "2432753f-972b-443a-8f30-3f9f9d835865",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify the response payload has a Currency parameter",
              "fullTitle": "Dex Request - DexTrades To verify the response payload has a Currency parameter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTrades[0].Trade.Buy;\nexpect(result).haveOwnProperty(cur);",
              "err": {},
              "uuid": "2d38a36d-a500-43c1-badd-ff39abc52f1a",
              "parentUUID": "2432753f-972b-443a-8f30-3f9f9d835865",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify response object is not empty",
              "fullTitle": "Dex Request - DexTrades To verify response object is not empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTrades;\nexpect(result).not.empty",
              "err": {},
              "uuid": "66e8d891-073b-49cf-95ba-b38daf2d5e05",
              "parentUUID": "2432753f-972b-443a-8f30-3f9f9d835865",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify the property type of {amount} is a string",
              "fullTitle": "Dex Request - DexTrades To verify the property type of {amount} is a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTrades[0].Trade.Buy;\nconst amount = result.Amount;\nexpect(amount).to.be.a('string');",
              "err": {},
              "uuid": "873ff09e-9a85-4b36-b7e8-9423b298029f",
              "parentUUID": "2432753f-972b-443a-8f30-3f9f9d835865",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify the property type of {amount} is not an integer",
              "fullTitle": "Dex Request - DexTrades To verify the property type of {amount} is not an integer",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTrades[0].Trade.Buy;\nconst amount = result.Amount;\nexpect(amount).to.not.be.an('integer');",
              "err": {},
              "uuid": "1e291119-53b5-4ca5-bc9f-197fb9c7e429",
              "parentUUID": "2432753f-972b-443a-8f30-3f9f9d835865",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify the property type of {fungible} is boolean",
              "fullTitle": "Dex Request - DexTrades To verify the property type of {fungible} is boolean",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.DEXTrades[0].Trade.Buy;\nconst fungible = result.Currency.Fungible;\nexpect(fungible).to.be.a('boolean');",
              "err": {},
              "uuid": "42076b28-99be-4fab-ac6b-29851532d1f8",
              "parentUUID": "2432753f-972b-443a-8f30-3f9f9d835865",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1d818abc-0c06-47e3-ae20-5b992ece6d65",
            "385f40d2-6d86-42b3-bdc5-39c90e5e9f1d",
            "2d38a36d-a500-43c1-badd-ff39abc52f1a",
            "66e8d891-073b-49cf-95ba-b38daf2d5e05",
            "873ff09e-9a85-4b36-b7e8-9423b298029f",
            "1e291119-53b5-4ca5-bc9f-197fb9c7e429",
            "42076b28-99be-4fab-ac6b-29851532d1f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "72ea0571-2094-4d8e-8035-8dafebddd71e",
          "title": "DEX Request - MinerRewards: Error Handling",
          "fullFile": "/Users/timothy.tonwuru/api_testing_framework/api_test/request_miner_rewards.js",
          "file": "/api_test/request_miner_rewards.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "To verify error message due to invalid parameter: BurntFee",
              "fullTitle": "DEX Request - MinerRewards: Error Handling To verify error message due to invalid parameter: BurntFee",
              "timedOut": false,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n            res = await request({\n                url, \n                document, \n                requestHeaders\n            });\n        } catch (error) {\n            const error_msg = error.response;\n            const status_value = error_msg.status\n            const invalid_parameter = error_msg.errors[0].message;\n            \n            assert.equal(200, status_value);\n            expect(invalid_parameter).contain(`Cannot query field \"${burnt_fee}\"`);\n            expect(invalid_parameter).contain('Cannot query field \"BurntFee\" on type \"EVM_MinerReward_Fields_Reward\". Did you mean \"BurntFees\"?')\n        }",
              "err": {},
              "uuid": "121dd27a-6a07-49c6-9d3c-adbf945cdb87",
              "parentUUID": "72ea0571-2094-4d8e-8035-8dafebddd71e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "121dd27a-6a07-49c6-9d3c-adbf945cdb87"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 88,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "92fcc29d-31a3-4794-a4a8-341e31519ca1",
          "title": "DEX Request - Transfers",
          "fullFile": "/Users/timothy.tonwuru/api_testing_framework/api_test/request_transfers.js",
          "file": "/api_test/request_transfers.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DEX Request - Transfers\"",
              "fullTitle": "DEX Request - Transfers \"before all\" hook in \"DEX Request - Transfers\"",
              "timedOut": false,
              "duration": 155,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    res = await request({\n        url, \n        document, \n        requestHeaders\n    });\n} catch (error) {\n    console.error('Error massage: ', error);\n    process.exit(1);\n}",
              "err": {},
              "uuid": "a553e661-4b01-4b8d-bc45-60ebbf663d62",
              "parentUUID": "92fcc29d-31a3-4794-a4a8-341e31519ca1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "To verify transaction status is {true}",
              "fullTitle": "DEX Request - Transfers To verify transaction status is {true}",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.Transfers[0];\nconst transactionStatus = result.TransactionStatus.Success;\n\nassert.strictEqual(true, transactionStatus, 'Error: TransactionStatus is not the same');",
              "err": {},
              "uuid": "b2a0c796-a891-4c28-a7d3-1e41737abbc3",
              "parentUUID": "92fcc29d-31a3-4794-a4a8-341e31519ca1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify protocol name is erc20",
              "fullTitle": "DEX Request - Transfers To verify protocol name is erc20",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.Transfers[0];\n// console.log(result);\nconst protocolName = result.Transfer.Currency.ProtocolName\n\nassert.equal(proto_name, protocolName, 'Error: Protocol Name not same');",
              "err": {},
              "uuid": "8bae2d1f-95e0-443a-9be6-1d2b8ae5bd68",
              "parentUUID": "92fcc29d-31a3-4794-a4a8-341e31519ca1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify {from} and {sender} address are the same",
              "fullTitle": "DEX Request - Transfers To verify {from} and {sender} address are the same",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await res.EVM.Transfers[0];\nconst transFrom = result.Transaction.From;\nconst sender = result.Transfer.Sender;\n\nexpect(transFrom).eq(sender);",
              "err": {},
              "uuid": "1592dfc4-3991-4d28-a427-a4eb29b87205",
              "parentUUID": "92fcc29d-31a3-4794-a4a8-341e31519ca1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b2a0c796-a891-4c28-a7d3-1e41737abbc3",
            "8bae2d1f-95e0-443a-9be6-1d2b8ae5bd68",
            "1592dfc4-3991-4d28-a427-a4eb29b87205"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "[object Object]": true
      },
      "version": "6.2.0"
    }
  }
}